# Generated by Django 5.0.1 on 2024-01-27 15:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('BASE', '0005_remove_school_grades'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='grade',
            name='Subjects',
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('credits', models.TextField(default='')),
                ('poster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BASE.school')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BASE.subject')),
            ],
        ),
        migrations.CreateModel(
            name='GradeSubjectContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.ManyToManyField(to='BASE.content')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BASE.grade')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BASE.subject')),
            ],
        ),
        migrations.AddField(
            model_name='subject',
            name='grades',
            field=models.ManyToManyField(related_name='subjects_for_grade', through='BASE.GradeSubjectContent', to='BASE.grade'),
        ),
        migrations.AddField(
            model_name='grade',
            name='subjects',
            field=models.ManyToManyField(related_name='grades_for_subject', through='BASE.GradeSubjectContent', to='BASE.subject'),
        ),
    ]
